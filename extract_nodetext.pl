#!/usr/bin/perl -w
#   AsmBASIC - a BASIC compile and go system written in assembly language
#   Copyright (C) 2022  Ekkehard Morgenstern
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
#   NOTE: Programs created with AsmBASIC do not fall under this license.
#
#   CONTACT INFO:
#       E-Mail: ekkehard@ekkehardmorgenstern.de
#       Mail: Ekkehard Morgenstern, Mozartstr. 1, D-76744 Woerth am Rhein,
#             Germany, Europe

print "; auto-generated by extract_nodetext.pl -- DO NOT MODIFY!\n\n";
print "                        cpu         x64\n";
print "                        bits        64\n\n";
print "                        section     .rodata\n\n";
print "                        global      nc_texts,tt_texts,tb_texts\n";
print "                        global      nt_texts\n\n";
#      0000000001111111112222222223333333334444444445
#      0123456890123456890123456890123456890123456890
open FILE,'<mainsyntax.inc' || die "can't open mainsyntax.inc: $!\n";
my @ncs;
my @tts;
my @tbs;
my @nts;
while (<FILE>) {
    chomp;
    next unless /equ/;
    if ( /^NC_/ && /^([A-Z_]+)/ ) {
        my $sym = lc($1);
        printf "%-23s %-11s '%s',0\n",$sym,'db',$1;
        push @ncs, $sym;
    } elsif ( /^TT_/ && /^([A-Z_]+)/ ) {
        my $sym = lc($1);
        printf "%-23s %-11s '%s',0\n",$sym,'db',$1;
        push @tts, $sym;
    } elsif ( /^TB_/ && /^([A-Z_]+)/ ) {
        my $sym = lc($1);
        printf "%-23s %-11s '%s',0\n",$sym,'db',$1;
        push @tbs, $sym;
    } elsif ( /^_?NT_/ && /^([A-Z0-9_]+)/ ) {
        my $sym = lc($1);
        printf "%-23s %-11s '%s',0\n",$sym,'db',$1;
        push @nts, $sym;
    }
}
close FILE;

print "                        align       8,db 0\n\n";
print "\nnc_texts:\n";
for ( @ncs ) {
    print "                        dq          $_\n";
}
print "\ntt_texts:\n";
for ( @tts ) {
    print "                        dq          $_\n";
}
print "\ntb_texts:\n";
for ( @tbs ) {
    print "                        dq          $_\n";
}
print "\nnt_texts:\n";
for ( @nts ) {
    print "                        dq          $_\n";
}
